#include "kart.h"
//-----------------------------------------------------------------------------------------------------------------
// Définition des broches d'entrée analogique
#define POTENTIOMETER_AN    1 // PORT RA1 AN1
#define CURRENT_SENSOR_AN   2 // PORT RA2 AN2
//fonction
void __interrupt() ISR(void); //interuption pour le CAN
void init_timer(void); //init du timer2 pour la pwm
void initPWM(void); //init de la PWM
void initADC(void); //config entre Analogique et du CAN
void init_interup(void); //autorise l'interruption sur le CAN
void lecturAn(char port);//lit le Port analogique du CAN(avoir config la broche ds initADC(void))
//-----------------------------------------------------------------------------------------------------------------


//-----------------------------------------------------------------------------------------------------------------
void main (void)
{
//-----------------------------------------------------------------------------------------------------------------
    //appel des differentes configurations 
    init_interup();
    InitPic();
    init_timer();
    initPWM();
    initADC();
    
 //-----------------------------------------------------------------------------------------------------------------
    
   
    
    while(1)
    {
        lecturAn(1);
        lecturAn(2);
       
    }
//-----------------------------------------------------------------------------------------------------------------
}
//---------------------------------------------------------------------------------------------------------------- __interrupt() ISR(void)
{
    if (PIR1bits.ADIF) // Vérifiez si l'interruption du CAN a été déclenchée
    {
        if(ADCON0bits.CHS=1)
        {
                              //char dutycycle;
             char valccp1;
    
        valccp1 = ADRESH/2.55;//dutycycle = ADRESH/2.55;
                              //valccp1 = dutycycle;
        CCPR1L = valccp1;
        
        PIR1bits.ADIF = 0;  //Réinitialisez le drapeau d'interruption du CAN
        }
        if(ADCON0bits.CHS=2)
        {
                              
             char valccp1;
    
        valccp1 = ADRESH/2.55;//dutycycle = ADRESH/2.55;
                              //valccp1 = dutycycle;
        CCPR1L = valccp1;
        
        PIR1bits.ADIF = 0;  //Réinitialisez le drapeau d'interruption du CAN
        }   
                
    }
}